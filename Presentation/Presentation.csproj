<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.8" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="8.0.8" PrivateAssets="all" />
    <PackageReference Include="Microsoft.AspNetCore.WebUtilities" Version="8.0.12" />
    <PackageReference Include="MudBlazor" Version="7.15.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\LinearAlgebra\LinearAlgebra.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="wwwroot\appsettings.Production.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

	
	<UsingTask TaskName="ReplaceBaseHRef" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
        <InputFilename ParameterType="System.String" Required="true" />
        <AppSettingsfile ParameterType="System.String" Required="true" />
        <BaseHRefAttribute ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
        <Reference Include="$(NugetPackageRoot)\newtonsoft.json\13.0.3\lib\netstandard2.0\Newtonsoft.Json.dll" />
        <Using Namespace="System" />
        <Using Namespace="System.IO" />
        <Using Namespace="System.Text" />
        <Using Namespace="System.Text.RegularExpressions" />
        <Using Namespace="Newtonsoft.Json" />
        <Using Namespace="Newtonsoft.Json.Linq" />
        <Code Type="Fragment" Language="C#">
            <![CDATA[  
                  var inputFile = File.ReadAllText(InputFilename);                
          var appsetting = File.ReadAllText(AppSettingsfile);

                    JObject appsettings = JObject.Parse(appsetting);

          var baseHRef = appsettings[BaseHRefAttribute].Value<string>();
          if (!string.IsNullOrEmpty(baseHRef)) {
                    Log.LogMessage( MessageImportance.High, baseHRef );

                      var outputFile = InputFilename;
                      var matchExpression = "\\<base\\ href=\\\"(.*)\\\"\\ \\/\\>";
            var newBaseHRef = $"<base href=\"{baseHRef}\" />";
            File.WriteAllText(
              outputFile,
              Regex.Replace(inputFile, matchExpression, newBaseHRef)
              );
          }
        ]]>
        </Code>
    </Task>
</UsingTask>

<Target Name="ReplaceBaseHRef" AfterTargets="Publish">
    <ReplaceBaseHRef InputFilename="$(PublishDir)wwwroot\index.html" AppSettingsfile="$(PublishDir)wwwroot\appsettings.Production.json" BaseHRefAttribute="BaseHRef" />
</Target>
</Project>